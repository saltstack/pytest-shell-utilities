---
minimum_pre_commit_version: 2.9.2
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict  # Check for files that contain merge conflict strings.
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
        exclude: ^src/pytestshellutils/downgraded/.*\.py$
      - id: mixed-line-ending     # Replaces or checks mixed line ending.
        args: [--fix=lf]
      - id: end-of-file-fixer
      - id: fix-encoding-pragma
        args: [--remove]
      - id: check-yaml
      - id: debug-statements
        language_version: python3

  # ----- Local Hooks ----------------------------------------------------------------------------------------------->
  - repo: local
    hooks:
      - id: sort-pylint-spelling-words
        name: Sort PyLint Spelling Words File
        entry: python .pre-commit-hooks/sort-pylint-spelling-words.py
        language: system
        files: ^\.pylint-spelling-words$

      - id: check-changelog-entries
        name: Check Changelog Entries
        entry: python .pre-commit-hooks/check-changelog-entries.py
        language: system

      - id: check-copyright-headers
        name: Check python modules for appropriate copyright headers
        files: ^.*\.py$
        entry: python .pre-commit-hooks/copyright-headers.py
        language: system
  # <---- Local Hooks ------------------------------------------------------------------------------------------------

  # ----- Formatting ------------------------------------------------------------------------------------------------>
  - repo: https://github.com/saltstack/pre-commit-remove-import-headers
    rev: 1.1.0
    hooks:
      - id: remove-import-headers

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        name: Rewrite Code to be Py3.5+
        args: [
          --py3-plus
        ]
        files: ^((setup|noxfile|tests/.*|src/pytestshellutils/__init__)\.py)$

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        name: Rewrite Code to be Py3.7+
        args: [
          --py37-plus
        ]
        files: ^(src/.*\.py)$
        exclude: ^src/pytestshellutils/(__init__|version)\.py$

  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.9.0
    hooks:
      - id: reorder-python-imports
        args:
          - --py37-plus
          - --application-directories=.:src
        exclude: ^src/pytestshellutils/version\.py$

  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black
        args: [-l 100]
        exclude: ^src/pytestshellutils/version\.py$

  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        args: [--skip-errors]
        files: ^(.*\.rst|docs/.*\.rst|src/pytestshellutils/.*\.py)$
        additional_dependencies: [black==22.8.0]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.4.1
    hooks:
      - id: mypy
        alias: mypy-tools
        name: Run mypy against tools
        files: ^tools/.*\.py$
        #args: [--strict]
        additional_dependencies:
          - attrs
          - rich
          - types-attrs
          - types-requests

  - repo: https://github.com/s0undt3ch/python-tools-scripts
    rev: "0.15.0"
    hooks:
      - id: tools
        alias: actionlint
        name: Lint GitHub Actions Workflows
        files: "^.github/workflows/"
        types:
          - yaml
        args:
          - pre-commit
          - actionlint
        additional_dependencies:
          - packaging==23.0
  # <---- Formatting -------------------------------------------------------------------------------------------------

  # ----- Security -------------------------------------------------------------------------------------------------->
  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.4"
    hooks:
      - id: bandit
        alias: bandit-salt
        name: Run bandit against the code base
        args: [--silent, -lll, --skip, B701]
        files: ^(?!tests/).*\.py$
        exclude: ^src/pytestshellutils/version\.py$
  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.4"
    hooks:
      - id: bandit
        alias: bandit-tests
        name: Run bandit against the test suite
        args: [--silent, -lll, --skip, B701]
        files: ^tests/.*
  # <---- Security ---------------------------------------------------------------------------------------------------

  # ----- Code Analysis --------------------------------------------------------------------------------------------->
  - repo: https://github.com/pycqa/flake8
    rev: '6.0.0'
    hooks:
      - id: flake8
        exclude: ^(src/pytestshellutils/version\.py|\.pre-commit-hooks/.*\.py)$
        additional_dependencies:
        - flake8-mypy-fork
        - pydocstyle>=4.0.0
        - flake8-docstrings
        - flake8-rst
        - flake8-typing-imports

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.991
    hooks:
      - id: mypy
        files: ^((src|tests)/.*\.py)$
        exclude: ^(src/pytestshellutils/(utils/(socket|time)\.py))$
        args: [--strict]
        additional_dependencies:
          - attrs
          - types-attrs
          - types-setuptools
          - pydantic
          - pytest
  # <---- Code Analysis ----------------------------------------------------------------------------------------------
